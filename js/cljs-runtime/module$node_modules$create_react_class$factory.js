shadow$provide.module$node_modules$create_react_class$factory=function(k,A,f,m,F){var c=f("module$node_modules$object_assign$index"),q=f("module$node_modules$fbjs$lib$emptyObject"),e=f("module$node_modules$fbjs$lib$invariant"),y=f("module$node_modules$fbjs$lib$warning");var ja={prop:"prop",context:"context",childContext:"child context"};m.exports=function(f,k,m){function A(c,e,f){for(var h in e)e.hasOwnProperty(h)&&y("function"===typeof e[h],"%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
c.displayName||"ReactClass",ja[f],h)}function F(c,f){if(f){e("function"!==typeof f,"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.");e(!k(f),"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var h=c.prototype,q=h.__reactAutoBindPairs;f.hasOwnProperty("mixins")&&sa.mixins(c,f.mixins);for(var z in f)if(f.hasOwnProperty(z)&&"mixins"!==z){var m=f[z],A=h.hasOwnProperty(z),r=A,F=z,M=na.hasOwnProperty(F)?
na[F]:null;W.hasOwnProperty(F)&&e("OVERRIDE_BASE"===M,"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",F);r&&e("DEFINE_MANY"===M||"DEFINE_MANY_MERGED"===M,"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",F);if(sa.hasOwnProperty(z))sa[z](c,m);else r=na.hasOwnProperty(z),"function"!==typeof m||r||A||!1===f.autobind?A?
(A=na[z],e(r&&("DEFINE_MANY_MERGED"===A||"DEFINE_MANY"===A),"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",A,z),"DEFINE_MANY_MERGED"===A?h[z]=Qb(h[z],m):"DEFINE_MANY"===A&&(h[z]=wa(h[z],m))):(h[z]=m,"function"===typeof m&&f.displayName&&(h[z].displayName=f.displayName+"_"+z)):(q.push(z,m),h[z]=m)}}else h=typeof f,y("object"===h&&null!==f,"%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.",
c.displayName||"ReactClass",null===f?null:h)}function M(c,f){e(c&&f&&"object"===typeof c&&"object"===typeof f,"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");for(var h in f)f.hasOwnProperty(h)&&(e(void 0===c[h],"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",h),c[h]=f[h]);return c}function Qb(c,
e){return function(){var f=c.apply(this,arguments),h=e.apply(this,arguments);if(null==f)return h;if(null==h)return f;var q={};M(q,f);M(q,h);return q}}function wa(c,e){return function(){c.apply(this,arguments);e.apply(this,arguments)}}function Da(c,e){var f=e.bind(c);f.__reactBoundContext=c;f.__reactBoundMethod=e;f.__reactBoundArguments=null;var h=c.constructor.displayName,q=f.bind;f.bind=function(k){for(var z=arguments.length,r=Array(1<z?z-1:0),m=1;m<z;m++)r[m-1]=arguments[m];if(k!==c&&null!==k)y(!1,
"bind(): React component methods may only be bound to the component instance. See %s",h);else if(!r.length)return y(!1,"bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s",h),f;z=q.apply(f,arguments);z.__reactBoundContext=c;z.__reactBoundMethod=e;z.__reactBoundArguments=r;return z};return f}var Ea=[],na={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",
childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",UNSAFE_componentWillMount:"DEFINE_MANY",UNSAFE_componentWillReceiveProps:"DEFINE_MANY",UNSAFE_componentWillUpdate:"DEFINE_MANY",
updateComponent:"OVERRIDE_BASE"},ra={getDerivedStateFromProps:"DEFINE_MANY_MERGED"},sa={displayName:function(c,e){c.displayName=e},mixins:function(c,e){if(e)for(var f=0;f<e.length;f++)F(c,e[f])},childContextTypes:function(e,f){A(e,f,"childContext");e.childContextTypes=c({},e.childContextTypes,f)},contextTypes:function(e,f){A(e,f,"context");e.contextTypes=c({},e.contextTypes,f)},getDefaultProps:function(c,e){c.getDefaultProps=c.getDefaultProps?Qb(c.getDefaultProps,e):e},propTypes:function(e,f){A(e,
f,"prop");e.propTypes=c({},e.propTypes,f)},statics:function(c,f){a:if(f)for(var h in f){var q=f[h];if(f.hasOwnProperty(h)){e(!(h in sa),'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',h);if(h in c){f=ra.hasOwnProperty(h)?ra[h]:null;e("DEFINE_MANY_MERGED"===f,"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",
h);c[h]=Qb(c[h],q);break a}c[h]=q}}},autobind:function(){}},Ca={componentDidMount:function(){this.__isMounted=!0}},Ia={componentWillUnmount:function(){this.__isMounted=!1}},W={replaceState:function(c,e){this.updater.enqueueReplaceState(this,c,e)},isMounted:function(){y(this.__didWarnIsMounted,"%s: isMounted is deprecated. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.",this.constructor&&this.constructor.displayName||this.name||"Component");
this.__didWarnIsMounted=!0;return!!this.__isMounted}},ma=function(){};c(ma.prototype,f.prototype,W);return function(c){var f=function(c,h,k){y(this instanceof f,"Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory");if(this.__reactAutoBindPairs.length)for(var z=this.__reactAutoBindPairs,r=0;r<z.length;r+=2)this[z[r]]=Da(this,z[r+1]);this.props=c;this.context=h;this.refs=q;this.updater=k||m;this.state=null;c=this.getInitialState?this.getInitialState():
null;void 0===c&&this.getInitialState._isMockFunction&&(c=null);e("object"===typeof c&&!Array.isArray(c),"%s.getInitialState(): must return an object or null",f.displayName||"ReactCompositeComponent");this.state=c};f.prototype=new ma;f.prototype.constructor=f;f.prototype.__reactAutoBindPairs=[];Ea.forEach(F.bind(null,f));F(f,Ca);F(f,c);F(f,Ia);f.getDefaultProps&&(f.defaultProps=f.getDefaultProps());f.getDefaultProps&&(f.getDefaultProps.isReactClassApproved={});f.prototype.getInitialState&&(f.prototype.getInitialState.isReactClassApproved=
{});e(f.prototype.render,"createClass(...): Class specification must implement a `render` method.");y(!f.prototype.componentShouldUpdate,"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.",c.displayName||"A component");y(!f.prototype.componentWillRecieveProps,"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",c.displayName||"A component");
y(!f.prototype.UNSAFE_componentWillRecieveProps,"%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",c.displayName||"A component");for(var k in na)f.prototype[k]||(f.prototype[k]=null);return f}}}
//# sourceMappingURL=module$node_modules$create_react_class$factory.js.map
